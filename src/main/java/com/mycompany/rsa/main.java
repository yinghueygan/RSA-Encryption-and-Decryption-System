/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.rsa;

import java.util.*;
import java.math.BigInteger;
import java.io.DataInputStream;
import java.io.IOException;
import java.security.*;
import javax.crypto.*;
import javax.swing.ImageIcon;

/**
 *
 * @author User10
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    public main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label_p = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textP = new javax.swing.JTextArea();
        label_q = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textQ = new javax.swing.JTextArea();
        label_e = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        textE = new javax.swing.JTextArea();
        label_n = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        textN = new javax.swing.JTextArea();
        title = new javax.swing.JLabel();
        label_phi = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        textPhi = new javax.swing.JTextArea();
        label_d = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        textD = new javax.swing.JTextArea();
        label_plaintext = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        textInput = new javax.swing.JTextArea();
        generateKey = new javax.swing.JButton();
        encrypt = new javax.swing.JButton();
        decrypt = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        label_encryptedmsg = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        textOutput = new javax.swing.JTextArea();
        backg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(1285, 683));
        jPanel1.setLayout(null);

        label_p.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        label_p.setText("Random 512-bit prime (p):");
        jPanel1.add(label_p);
        label_p.setBounds(100, 90, 250, 25);

        textP.setEditable(false);
        textP.setBackground(new java.awt.Color(255, 255, 204));
        textP.setColumns(20);
        textP.setForeground(new java.awt.Color(102, 102, 102));
        textP.setLineWrap(true);
        textP.setRows(5);
        textP.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(textP);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(100, 120, 250, 100);

        label_q.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        label_q.setText("Random 512-bit prime (q):");
        jPanel1.add(label_q);
        label_q.setBounds(380, 90, 270, 30);

        textQ.setEditable(false);
        textQ.setBackground(new java.awt.Color(255, 255, 204));
        textQ.setColumns(20);
        textQ.setForeground(new java.awt.Color(102, 102, 102));
        textQ.setLineWrap(true);
        textQ.setRows(5);
        textQ.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane2.setViewportView(textQ);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(380, 120, 270, 100);

        label_e.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        label_e.setText("e:");
        jPanel1.add(label_e);
        label_e.setBounds(100, 240, 14, 25);

        textE.setEditable(false);
        textE.setBackground(new java.awt.Color(255, 255, 204));
        textE.setColumns(20);
        textE.setForeground(new java.awt.Color(102, 102, 102));
        textE.setLineWrap(true);
        textE.setRows(5);
        textE.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane3.setViewportView(textE);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(100, 270, 140, 100);

        label_n.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        label_n.setText("n = pq");
        jPanel1.add(label_n);
        label_n.setBounds(270, 240, 56, 25);

        textN.setEditable(false);
        textN.setBackground(new java.awt.Color(255, 255, 204));
        textN.setColumns(20);
        textN.setForeground(new java.awt.Color(102, 102, 102));
        textN.setLineWrap(true);
        textN.setRows(5);
        textN.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane4.setViewportView(textN);

        jPanel1.add(jScrollPane4);
        jScrollPane4.setBounds(270, 270, 380, 100);

        title.setFont(new java.awt.Font("Bodoni MT Black", 0, 36)); // NOI18N
        title.setForeground(new java.awt.Color(0, 0, 102));
        title.setText("RSA Encryption and Decryption System");
        jPanel1.add(title);
        title.setBounds(300, 20, 816, 42);

        label_phi.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        label_phi.setText("Ï•(n):");
        jPanel1.add(label_phi);
        label_phi.setBounds(100, 390, 149, 25);

        textPhi.setEditable(false);
        textPhi.setBackground(new java.awt.Color(255, 255, 204));
        textPhi.setColumns(20);
        textPhi.setForeground(new java.awt.Color(102, 102, 102));
        textPhi.setLineWrap(true);
        textPhi.setRows(5);
        textPhi.setBorder(null);
        textPhi.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane5.setViewportView(textPhi);

        jPanel1.add(jScrollPane5);
        jScrollPane5.setBounds(100, 420, 550, 80);

        label_d.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        label_d.setText("d:");
        jPanel1.add(label_d);
        label_d.setBounds(110, 530, 34, 25);

        textD.setEditable(false);
        textD.setBackground(new java.awt.Color(255, 255, 204));
        textD.setColumns(20);
        textD.setForeground(new java.awt.Color(102, 102, 102));
        textD.setLineWrap(true);
        textD.setRows(5);
        textD.setBorder(null);
        textD.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane7.setViewportView(textD);

        jPanel1.add(jScrollPane7);
        jScrollPane7.setBounds(100, 560, 550, 72);

        label_plaintext.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        label_plaintext.setText("Plaintext / Ciphertext:");
        jPanel1.add(label_plaintext);
        label_plaintext.setBounds(770, 120, 250, 25);

        textInput.setBackground(new java.awt.Color(0, 153, 153));
        textInput.setColumns(20);
        textInput.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textInput.setLineWrap(true);
        textInput.setRows(5);
        textInput.setText("(Enter plaintext to encrypt OR enter ciphertext to decrypt)");
        textInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textInputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                textInputFocusLost(evt);
            }
        });
        jScrollPane6.setViewportView(textInput);

        jPanel1.add(jScrollPane6);
        jScrollPane6.setBounds(770, 150, 440, 110);

        generateKey.setBackground(new java.awt.Color(255, 204, 0));
        generateKey.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 20)); // NOI18N
        generateKey.setForeground(new java.awt.Color(255, 255, 255));
        generateKey.setText("GENERATE KEY");
        generateKey.setBorder(null);
        generateKey.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        generateKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateKeyActionPerformed(evt);
            }
        });
        jPanel1.add(generateKey);
        generateKey.setBounds(770, 300, 160, 40);

        encrypt.setBackground(new java.awt.Color(255, 51, 51));
        encrypt.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 20)); // NOI18N
        encrypt.setForeground(new java.awt.Color(255, 255, 255));
        encrypt.setText("ENCRYPT");
        encrypt.setBorder(null);
        encrypt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        encrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptActionPerformed(evt);
            }
        });
        jPanel1.add(encrypt);
        encrypt.setBounds(960, 300, 110, 40);

        decrypt.setBackground(new java.awt.Color(102, 255, 51));
        decrypt.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 20)); // NOI18N
        decrypt.setForeground(new java.awt.Color(255, 255, 255));
        decrypt.setText("DECRYPT");
        decrypt.setBorder(null);
        decrypt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        decrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptActionPerformed(evt);
            }
        });
        jPanel1.add(decrypt);
        decrypt.setBounds(1100, 300, 110, 40);

        reset.setBackground(new java.awt.Color(153, 153, 153));
        reset.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 20)); // NOI18N
        reset.setForeground(new java.awt.Color(255, 255, 255));
        reset.setText("RESET");
        reset.setToolTipText("");
        reset.setBorder(null);
        reset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        jPanel1.add(reset);
        reset.setBounds(770, 360, 440, 40);

        label_encryptedmsg.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        label_encryptedmsg.setText("Encrypted Message / Decrypted Message:");
        jPanel1.add(label_encryptedmsg);
        label_encryptedmsg.setBounds(770, 440, 380, 25);

        textOutput.setEditable(false);
        textOutput.setBackground(new java.awt.Color(255, 255, 204));
        textOutput.setColumns(20);
        textOutput.setLineWrap(true);
        textOutput.setRows(5);
        textOutput.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane8.setViewportView(textOutput);

        jPanel1.add(jScrollPane8);
        jScrollPane8.setBounds(770, 470, 440, 140);

        backg.setIcon(new javax.swing.ImageIcon("D:\\d3_sem1\\Applied Cryptography\\Assignment\\RSA\\src\\main\\java\\Images\\backg.jpg")); // NOI18N
        jPanel1.add(backg);
        backg.setBounds(0, 0, 1300, 710);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        textInput.setText("(Enter plaintext to encrypt OR enter ciphertext to decrypt)");
        textOutput.setText(null);
    }//GEN-LAST:event_resetActionPerformed

    private void encryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptActionPerformed
        // TODO add your handling code here:
        byte[] encrypted = encrypt(textInput.getText().getBytes());
        textOutput.setText(new BigInteger(encrypted).toString());
    }//GEN-LAST:event_encryptActionPerformed

    private void decryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptActionPerformed
        // TODO add your handling code here:
        BigInteger inputCipher = new BigInteger(textInput.getText());
        byte[] decrypted = decrypt(inputCipher.toByteArray());
        textOutput.setText(new String(decrypted));
    }//GEN-LAST:event_decryptActionPerformed

    private void generateKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateKeyActionPerformed
        // TODO add your handling code here:
        generateKey();
    }//GEN-LAST:event_generateKeyActionPerformed

    private void textInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textInputFocusGained
        // TODO add your handling code here:
        if(textInput.getText().equals("(Enter plaintext to encrypt OR enter ciphertext to decrypt)")){
            textInput.setText("");
        }
    }//GEN-LAST:event_textInputFocusGained

    private void textInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textInputFocusLost
        // TODO add your handling code here:
        if(textInput.getText().equals("")){
            textInput.setText("(Enter plaintext to encrypt OR enter ciphertext to decrypt)");
        }
    }//GEN-LAST:event_textInputFocusLost
   
    // Encrypt message
    public byte[] encrypt(byte[] message)
    {
    return (new BigInteger(message)).modPow(e, n).toByteArray();
    }

    // Decrypt message
    public byte[] decrypt(byte[] message)
    {
    return (new BigInteger(message)).modPow(d, n).toByteArray();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
        
        main frame = new main();
        frame.setVisible(true);
        frame.setBounds(0, 0, 1285, 683); //set frame size
        
    }
    
    private BigInteger p;
    private BigInteger q;
    private BigInteger n;
    private BigInteger phi;
    private final BigInteger e = BigInteger.valueOf(65537);
    private BigInteger d;
    private final int bitlength = 512;
    private Random r;
    
    BigInteger gcd(BigInteger num1, BigInteger num2)
	{
		if(num2==BigInteger.valueOf(0))
			return num1;	
		else
			return gcd(num2,num1.mod(num2));
	}
    
    private void generateKey(){
//        p = BigInteger.valueOf(50581);
//        q = BigInteger.valueOf(59539);
        
        r = new Random();
        p = BigInteger.probablePrime(bitlength, r); //random p
        q = BigInteger.probablePrime(bitlength, r); //random q
        n = p.multiply(q); //p*q
        phi = p.subtract(BigInteger.ONE).multiply(q.subtract(BigInteger.ONE)); //(p-1)(q-1)
        while (phi.gcd(e).compareTo(BigInteger.ONE) > 0 && e.compareTo(phi) < 0){
            e.add(BigInteger.ONE);
        }
//        while (gcd(e,phi).equals(BigInteger.valueOf(1))==false){
//            p = BigInteger.probablePrime(bitlength, r); //random p
//            q = BigInteger.probablePrime(bitlength, r); //random q
//            n = p.multiply(q); //p*q
//            phi = p.subtract(BigInteger.ONE).multiply(q.subtract(BigInteger.ONE));
//        }
            
        d = e.modInverse(phi);
        
        textP.setText(p.toString());
        textQ.setText(q.toString());
        textN.setText(n.toString());
        textPhi.setText(phi.toString());
        textE.setText(e.toString());
        textD.setText(d.toString());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backg;
    private javax.swing.JButton decrypt;
    private javax.swing.JButton encrypt;
    private javax.swing.JButton generateKey;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel label_d;
    private javax.swing.JLabel label_e;
    private javax.swing.JLabel label_encryptedmsg;
    private javax.swing.JLabel label_n;
    private javax.swing.JLabel label_p;
    private javax.swing.JLabel label_phi;
    private javax.swing.JLabel label_plaintext;
    private javax.swing.JLabel label_q;
    private javax.swing.JButton reset;
    private javax.swing.JTextArea textD;
    private javax.swing.JTextArea textE;
    private javax.swing.JTextArea textInput;
    private javax.swing.JTextArea textN;
    private javax.swing.JTextArea textOutput;
    private javax.swing.JTextArea textP;
    private javax.swing.JTextArea textPhi;
    private javax.swing.JTextArea textQ;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
